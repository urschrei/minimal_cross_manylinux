os: linux
language: rust
services: docker

env:
  global:
    # This will be part of the release tarball
    # TODO change the project name
    - CRATE_NAME=minimal_cross_manylinux

jobs:
  include:
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-gnu
      services: docker

before_install:
  - set -e

install:
  - cargo install cross
  - source ~/.cargo/env || true

script:
  - cross test --target $TARGET

after_script: set +e

before_deploy:
  - shell_session_update() { :; };
  - stage=$(mktemp -d)
  - test -f Cargo.lock || cargo generate-lockfile
  - cross rustc --target $TARGET --release
  - cp target/$TARGET/release/*.so $stage
  - cd $stage
  - ls
  - sudo tar czf $src/$CRATE_NAME-$TRAVIS_TAG-$TARGET.tar.gz *
  - cd $src
  - sudo rm -rf $stage

deploy:
  # TODO Regenerate this api_key for your project, this one won't work for you. Here's how:
  # - Go to 'https://github.com/settings/tokens/new' and generate a Token with only the
  # `public_repo` scope enabled
  # - Call `travis encrypt $github_token` where $github_token is the token you got in the previous
  # step and `travis` is the official Travis CI gem (see https://rubygems.org/gems/travis/)
  # - Enter the "encrypted value" below
  api_key:
    - secure: 0UfD2iufSBBChBzqjFv2fyUVOAlHXmzgcBkwSq7jqDXH3hkDjeUmdPYllxF6/NEVfsvn9iVQmO7YIZl/3DCuFHQXjwx7tTIUdCCpL1JsIfGYZlJ1wZxU2X1gE10bATBSbnTIyZWprj+/ezpcntuU2nGDJRoTBSGdts35FAFU2u/E3osl0iOq9QcDAZMdxqQ87zCzJC7g8KJHI10BnNpEiQxyr9JwxxzDy+ygV2eyMgI0Wzsgi46HeQTuvuWmJkbdI/bXXe7rAzjNu6lbnkk2amn2rkPfK7MOSXCp0d625KYYrvJxpdTAmMkvmBHHa8wGFNMt+uOjpT0SHgqBMvJLGzUtygVoGkLY02KcMe+kdvpJlVsp3VVjsb7694iAA3awiqlvFwCdgguU5S8SUB5orMovp7LN8YSgNi6FNZSOOkwOZ/RmOlk75CqbL0iuoZD2WdOtgL2UnFRCatiiYRw7O7UdlzB4St53x3tjVGQxBF7m9BLJHaJVkArdrWcNwwba9M3wK3gxN088mSlwR3CbQzo+5NdsZtKDtvr5OXpY51Oo7/2sZGwU1onQGK/K2h4WTSMGm8PWbha+hjv7yXzu4asqfyMWoiRRdNw4N7hvFv+8Wnbc06p1ImOBpm/EjzA3iURzTPAVttEN/WSc1dohJvAr4+P7oScv/S59Ya106s4=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  # don't delete the artifacts from previous phases
  cleanup: false
  # deploy when a new tag is pushed
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo
